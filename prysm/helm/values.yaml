# Default values for eth2-prysm.
# This is a YAML-formatted file.

# Kubernetes namespace for Prysm beacon chain and validator client deployments, services, secrets, etc.
namespace: prysm

# Specify which Ethereum 2.0 testnet to use. If the target network is mainnet, leave this field blank.
ethereumTestnet: prater

# A required field that determines the persistent storage type. Default to nfs.
# Available options: nfs and hostPath.
persistentVolumeType: "nfs"

# NFS configurations. Only need to fill this section when persistentVolumeType is set to "nfs".
nfs:
  # IP address of the NFS server.
  serverIp: 172.20.10.10

securityContext:
  # The user ID will be used to run all processes in the container. The user should have the access to the mounted volume.
  # All directories and files created with the processes are owned by this user.
  runAsUser: 1001
  # The group ID will be used to run all processes in the container. The group should have the access to the mounted volume.
  # If this field is not set, the group ID of the processes will be 0, which means they will have root access.
  # See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more info.
  #
  # All directories and files created with the processes are owned by this group.
  runAsGroup: 2000

# A required section that configures image registry, image name and version tag for beacon chain and validator client.
# Prysm currently pushes images to:
#   Google Cloud Container Registry: https://console.cloud.google.com/gcr/images/prysmaticlabs/GLOBAL/prysm
#   Docker Hub: https://hub.docker.com/u/prysmaticlabs
image:
  # The image registry of beacon chain:
  #   Google Cloud: gcr.io/prysmaticlabs/prysm/beacon-chain
  #   Docker Hub: index.docker.io/prysmaticlabs/prysm-beacon-chain
  beaconImage: gcr.io/prysmaticlabs/prysm/beacon-chain
  # The image registry of validator client:
  #   Google Cloud: gcr.io/prysmaticlabs/prysm/validator
  #   Docker Hub: index.docker.io/prysmaticlabs/prysm-validator
  validatorImage: gcr.io/prysmaticlabs/prysm/validator 
  # Prysm release version. 
  # Check https://github.com/prysmaticlabs/prysm/releases for more info. 
  versionTag: v2.0.6

# A required section that contains beacon chain information.
beacon:
  # This field specifies the name and label for beacon chain deployment, container and service.
  name: beacon
  # The path to the beacon chain data directory. 
  # If persistentVolumeType is set to "nfs", this variable represents the data volume path on NFS.
  # If the type is set to "hostPath", it represents the volume path on the host node.
  dataDirPath: /data/prysm/beacon
  # UDP Port opened for P2P connection with the beacon node.
  # See https://docs.prylabs.network/docs/prysm-usage/p2p-host-ip for more info.
  p2pUdpPort: 12000
  # TCP Port opened for P2P connection with the beacon node.
  # See https://docs.prylabs.network/docs/prysm-usage/p2p-host-ip for more info.
  p2pTcpPort: 13000
  # Ethereum 1 node endpoints.
  eth1Endpoints:
    - http://127.0.0.1:8545
    - http://127.0.0.1:8546
    - http://127.0.0.1:8547
  # Specifying the genesis state file will allow users to skip generating the genesis state which takes a long time of reading eth1 deposit data.
  # Only need to specify testnet genesis file since Prysm supports embedded mainnet state.
  # Testnet genesis files can be found in https://github.com/eth2-clients/eth2-testnets Github repo.
  genesisStateFile: /data/prysm/beacon/prater-genesis.ssz

# This field determines how long it will wait before the validator client starts or restarts.
# It's a way to protect the validator client from double attesting or block proposing when the DB is out-of-date.
validatorStartWaitTime: 780

# A required section that contains information for all validator clients
validatorClients:
  # This section contains information for one validator client.
  # "validatorClient1" is the name of this validator client section. You can change it to other strings as long as it's different than other section names.
  validatorClient1:
    # This field specifies the name and label for validator client deployment, container and service.
    name: validator-client-1
    # The path to the validator client data directory.
    # If persistentVolumeType is set to "nfs", this variable represents the data volume path on NFS.
    # If the type is set to "hostPath", it represents the volume path on the host node.
    # It's recommended to have different value for each validator client to avoid using the wrong validator client data.
    dataDirPath: /data/prysm/validator-client-1
    # The path to the wallet directory.
    # It's recommended to have different value for each validator client to avoid using the wrong wallet.
    walletDirPath: /data/prysm/wallet-1
    # The secret name of the wallet password. 
    # It's recommended to have different value for each validator client to avoid using the wrong secret.
    walletPasswordSecretName: wallet-password-1
    # The wallet password.
    # It's recommended to have different value for each validator client to avoid using the wrong password.
    walletPassword: "example-password-1" 
    # A mark you want to leave each time the validator client proposes a block.
    # It can be a message or a pixel (on the graffiti wall).
    # See https://beaconcha.in/charts/graffiti_wordcloud for example.
    graffiti: "eth2 x k8s"

  # You can add more validator clients below. The name of a new validator client section can be validatorClient2 or anything else that you prefer
  # as long as the section has the same indentation as other validator client sections and contains all the fields under the section name, e.g.
  # validatorClient2:
  #   name: validator-client-2
  #   dataDirPath: /data/prysm/validator-client-2
  #   walletDirPath: /data/prysm/wallet-2
  #   walletPasswordSecretName: wallet-password-2
  #   walletPassword: "example-password-2"
  #   graffiti: "eth2 x k8s"
